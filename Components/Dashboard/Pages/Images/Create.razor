@page "/Dashboard/Images/Create"
@rendermode InteractiveServer

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Image</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Image" OnValidSubmit="AddImage" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label> 
                <InputText id="name" @bind-Value="Image.Name" class="form-control" /> 
                <ValidationMessage For="() => Image.Name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="description" class="form-label">Description:</label> 
                <InputText id="description" @bind-Value="Image.Description" class="form-control" /> 
                <ValidationMessage For="() => Image.Description" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="filename" class="form-label">FileName:</label> 
                <InputText id="filename" @bind-Value="Image.FileName" class="form-control" /> 
                <ValidationMessage For="() => Image.FileName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="fileextension" class="form-label">FileExtension:</label> 
                <InputText id="fileextension" @bind-Value="Image.FileExtension" class="form-control" /> 
                <ValidationMessage For="() => Image.FileExtension" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/Dashboard/Albums/Details?@Album">Back to List</a>
</div>

@code {
    [SupplyParameterFromQuery]
    private Guid Album { get; set; }

    [SupplyParameterFromForm]
    private Image Image { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddImage()
    {
        using var context = DbFactory.CreateDbContext();
        Image.Album = await context.Albums
            .FirstOrDefaultAsync(m => m.Id == Album);
        context.Images.Add(Image);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo($"/Dashboard/Albums/Details?id={Album}");
    }
}
